name: Build

on:
  push:
    branches: ["main"]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  server:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/.crates*
            target/
            test.sqlite
      - name: Install prerequites
        run: |
          cargo install sqlx-cli --no-default-features --features sqlite,rustls
          cargo install wasm-pack

      - name: Build server
        run: |
          export DATABASE_URL="sqlite://$GITHUB_WORKSPACE/test.sqlite"
          sqlx database create
          sqlx migrate run
          cargo build
          cargo test

      - name: Build .wasm module
        run: |
          wasm-pack build --target web lib_wasm

      - uses: actions/upload-artifact@v2
        with:
          name: lib_wasm
          path: lib_wasm/pkg

  client:
    runs-on: ubuntu-latest
    needs: [server]

    steps:
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 17

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: actions/download-artifact@v2
        with:
          name: lib_wasm
          path: lib_wasm/pkg

      - name: Install dependencies
        working-directory: ui
        run: pnpm install

      - name: Build
        working-directory: ui
        run: pnpm build
